name: "Generate OWASP Alerts Report with Severity"

on:
  workflow_dispatch:  # Allows manual triggering
  schedule:
    - cron: "0 0 * * *"  # Run daily, adjust based on your needs

jobs:
  detect-owasp:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Fetch code scanning alerts
      - name: Fetch code scanning alerts
        id: fetch_alerts
        uses: actions/github-script@v6
        with:
          script: |
            const alerts = await github.request('GET /repos/{owner}/{repo}/code-scanning/alerts', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            let owaspRelatedAlerts = alerts.data.filter(alert =>
              alert.rule.tags?.includes('external/cwe/cwe-089') || // SQL Injection
              alert.rule.tags?.includes('external/cwe/cwe-352') || // CSRF
              alert.rule.tags?.includes('external/cwe/cwe-1333') || // ReDoS
              alert.rule.tags?.includes('external/cwe/cwe-400') ||  // Uncontrolled Resource Consumption
              alert.rule.help?.toLowerCase().includes("owasp") ||
              alert.rule.description?.toLowerCase().includes("sql injection") ||
              alert.rule.description?.toLowerCase().includes("cross-site request forgery") ||
              alert.rule.description?.toLowerCase().includes("redos")
            );

            if (owaspRelatedAlerts.length === 0) {
              console.log("No OWASP-related alerts found.");
            } else {
              let report = `# OWASP Alerts Report\n\n`;
              owaspRelatedAlerts.forEach(alert => {
                let severity = alert.rule.security_severity_level || "Unknown";
                report += `- **Alert:** ${alert.rule.description}\n  **File:** ${alert.most_recent_instance.location.path}\n  **Line:** ${alert.most_recent_instance.location.start_line}\n  **Severity:** ${severity}\n\n`;
              });

              // Save the report to a Markdown file
              const fs = require('fs');
              fs.writeFileSync('owasp-alerts-report.md', report);
            }

      # Step 3: Commit the generated report back to the repository
      - name: Commit OWASP Alerts Report
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Add OWASP Alerts Report with Severity"
          file_pattern: owasp-alerts-report.md
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
