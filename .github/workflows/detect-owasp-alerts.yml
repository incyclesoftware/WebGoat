name: "Detect OWASP Alerts"

on:
  workflow_dispatch:  # Allows manual triggering
  schedule:
    - cron: "0 0 * * *"  # Run daily, adjust based on your needs

jobs:
  detect-owasp:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch code scanning alerts
        id: fetch_alerts
        uses: actions/github-script@v6
        with:
          script: |
            const alerts = await github.request('GET /repos/{owner}/{repo}/code-scanning/alerts', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            // Filter for OWASP-related alerts
            let owaspRelatedAlerts = alerts.data.filter(alert =>
              // Check for OWASP-related CWEs in the tags field
              alert.rule.tags?.includes('external/cwe/cwe-089') || // SQL Injection
              alert.rule.tags?.includes('external/cwe/cwe-352') || // CSRF
              alert.rule.tags?.includes('external/cwe/cwe-1333') || // ReDoS
              alert.rule.tags?.includes('external/cwe/cwe-400') ||  // Uncontrolled Resource Consumption
              alert.rule.help?.toLowerCase().includes("owasp") ||
              alert.rule.description?.toLowerCase().includes("sql injection") ||
              alert.rule.description?.toLowerCase().includes("cross-site request forgery") ||
              alert.rule.description?.toLowerCase().includes("redos")
            );

            if (owaspRelatedAlerts.length === 0) {
              console.log("No OWASP-related alerts found.");
            } else {
              console.log(`${owaspRelatedAlerts.length} OWASP-related alerts found.`);
              owaspRelatedAlerts.forEach(alert => {
                console.log(`OWASP Alert Found: ${alert.rule.description}`);
                console.log(`File: ${alert.most_recent_instance.location.path}, Line: ${alert.most_recent_instance.location.start_line}`);
              });
            }
